swagger: '2.0'
info:
  version: '1.0.0'
  title: CrudService
schemes: [ http ]
basePath: /api/v1
consumes: [ application/json ]
produces: [ application/json ]
host: arch.homework
paths:
  /health:
    get:
      tags: [health]
      operationId: health
      responses:
        '200':
          description: ok
  /user:
    get:
      tags: [user]
      operationId: list
      responses:
        '200':
          description: List
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/User'
        '500':
          description: unsuccessful operation
      parameters:
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/User'
  /user/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: uuid
          description: ID of user
      tags:
        - user
      description: Returns a user based on a single ID, if the user does not have access to the user
      operationId: get
      responses:
        '200':
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - user
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: uuid
          description: ID of user
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      responses:
        '204':
          description: user deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - user
      description: Update user with User ID
      operationId: updateUser
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: uuid
          description: ID of user
        - in: body
          required: true
          name: body
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: user updated
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
        maxLength: 256
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
        format: email
      phone:
        type: string
        format: phone
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
